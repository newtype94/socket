AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  voice_chain_socket

Parameters:
  TableUsers:
    Type: String
    Default: "VC_users"
    Description: store connection identifiers for each connected clients
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: "Required. Can be characters and underscore only. No numbers or special characters allowed."

Resources:
  VoiceChainSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: voice-chain-socket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.message"

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref VoiceChainSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref VoiceChainSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref VoiceChainSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref VoiceChainSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  AddRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref VoiceChainSocket
      RouteKey: add
      AuthorizationType: NONE
      OperationName: AddRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref AddInteg
  AddInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref VoiceChainSocket
      Description: Add Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AddFunction.Arn}/invocations
  CheckRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref VoiceChainSocket
      RouteKey: check
      AuthorizationType: NONE
      OperationName: CheckRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref CheckInteg
  CheckInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref VoiceChainSocket
      Description: check Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CheckFunction.Arn}/invocations

  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - AddRoute
      - DisconnectRoute
      - CheckRoute
    Properties:
      ApiId: !Ref VoiceChainSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref VoiceChainSocket

  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref TableUsers

  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: onconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - VoiceChainSocket
      - OnConnectFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ondisconnect/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - VoiceChainSocket
      - OnDisconnectFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  AddFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: add/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${VoiceChainSocket}/*"
  AddPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - VoiceChainSocket
      - AddFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AddFunction
      Principal: apigateway.amazonaws.com
  CheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: check/
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_USERS: !Ref TableUsers
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TableUsers
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${VoiceChainSocket}/*"
  CheckPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - VoiceChainSocket
      - CheckFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CheckFunction
      Principal: apigateway.amazonaws.com

Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionsTable.Arn

  OnConnectFunctionArn:
    Description: "OnConnect function ARN"
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: "OnDisconnect function ARN"
    Value: !GetAtt OnDisconnectFunction.Arn

  AddFunctionArn:
    Description: "Add function ARN"
    Value: !GetAtt AddFunction.Arn

  CheckFunctionArn:
    Description: "Check function ARN"
    Value: !GetAtt CheckFunction.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value:
      !Join [
        "",
        [
          "wss://",
          !Ref VoiceChainSocket,
          ".execute-api.",
          !Ref "AWS::Region",
          ".amazonaws.com/",
          !Ref "Stage",
        ],
      ]
